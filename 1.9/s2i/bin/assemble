#!/bin/bash

set -e

pushd /tmp/src

# try infer the package that we are building from the module file if we don't know it already
if [[ -z "$IMPORT_URL" && -f /tmp/src/go.mod ]]; then
    IMPORT_URL=`head -1 go.mod|cut -d ' ' -f2`
fi

if [[ `go list -f {{.Incomplete}}` == "true" || ! -z "$IMPORT_URL" ]]; then

    INSTALL_URL=${INSTALL_URL:-$IMPORT_URL}

    if [[ ! -z "$IMPORT_URL" ]]; then

        popd

        echo "Assembling GOPATH"

        export GOPATH=`realpath $HOME/go`

        mkdir -p $GOPATH/src/$IMPORT_URL

        mv /tmp/src/* $GOPATH/src/$IMPORT_URL

        if [[ -d /tmp/artifacts/pkg ]]; then

            echo "Restoring previous build artifacts"

            mv /tmp/artifacts/pkg $GOPATH

        fi

        # Resolve dependencies, ignore if vendor present

        if [[ ! -d $GOPATH/src/$INSTALL_URL/vendor && `go list -f {{.Incomplete}} $INSTALL_URL` == "true" ]]; then

            echo "Resolving dependencies"

            pushd $GOPATH/src/$INSTALL_URL

            go get

            popd

        fi

        # lets build

        pushd $GOPATH/src/$INSTALL_URL

        echo "Building"

        go install $INSTALL_URL

        mv $GOPATH/bin/* /opt/app-root/gobinary

        popd

        exit

    fi

    echo "ERROR: Package is missing dependencies and IMPORT_URL inference failed. Set IMPORT_URL env var."
    exec /$STI_SCRIPTS_PATH/usage

else

    go build -o /opt/app-root/gobinary

    popd

fi
